{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","_ref$onAdd","onAdd","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","query","setQuery","_useState5","_useState6","setMovie","_useState7","_useState8","hasError","setHasError","useEffect","_Fragment","onSubmit","e","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","response","Object","hasOwn","movieData","poster","Poster","Title","Plot","imdbID","normalizeMovieData","finally","htmlFor","type","id","placeholder","cn","isDanger","value","onChange","target","disabled","length","onClick","undefined","App","setMovies","find","m","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80a455c6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  onAdd?: (movie: Movie) => void;\n};\n\nfunction normalizeMovieData(movieData: MovieData): Movie {\n  const poster = movieData.Poster !== 'N/A'\n    ? movieData.Poster\n    : 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: poster,\n    imdbId: movieData.imdbID,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n  };\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAdd = () => {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [hasError, setHasError] = useState(false);\n\n  const handleSearchMovie = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    setLoading(true);\n    getMovie(query)\n      .then(response => {\n        if (Object.hasOwn(response, 'Error')) {\n          setHasError(true);\n        } else {\n          const movieData = normalizeMovieData(response as MovieData);\n\n          setMovie(movieData);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAdd(movie);\n    }\n\n    setQuery('');\n    setMovie(undefined);\n  };\n\n  useEffect(() => {\n    setHasError(false);\n  }, [query]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSearchMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { isDanger: hasError })}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': loading })}\n              disabled={!query.length}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=80213b6c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    if (movies.find(m => m.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}